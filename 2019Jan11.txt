Challenge:
(from)

Good morning! Here's your coding interview problem for today.

This problem was asked by Google.

Given an array of integers where every integer occurs three times except for one integer, which only occurs once, find and return the non-duplicated integer.

For example, given [6, 1, 3, 3, 3, 6, 6], return 1. Given [13, 19, 13, 13], return 19.

Do this in O(N) time and O(1) space.




Attempt:

// O(2N) and O(1) space
// return the first value that is not a duplicate
function findUnique(arr){
    arr.sort();                 // sort array: so each duplicate is lined up
    let max = (arr.length - 1);                   // last element in array
    if(arr[0] != arr[1]) return arr[0];           // first is unique
    if(arr[max] != arr[max - 1]) return arr[max]; // last is unique
    for(let i = 1; i < max; ++i){                 
        if(arr[i] != arr[i - 1] && arr[i] != arr[i + 1]) return arr[i];//no dup
    }
}

